index.js
--------
import React from "react";
import {createRoot} from 'react-dom/client';
import App from "./food/front/app";
 const Ap = ()=>{
  return(
    <div>
      <App/>  
    </div>
  )
 }
  const root =createRoot(document.getElementById('root'));
 root.render(<Ap/>)
----------------------------------------------------------


backend
-------
server.js
---------
const http = require('http');
const fs = require('fs');
const cors = require('cors');  // Importing CORS module

const foodItems = [
  { id: 1, name: 'Pizza', price: 10, image: 'https://via.placeholder.com/150?text=Pizza' },
  { id: 2, name: 'Burger', price: 5, image: 'https://via.placeholder.com/150?text=Burger' },
  { id: 3, name: 'Pasta', price: 8, image: 'https://via.placeholder.com/150?text=Pasta' },
];

const server = http.createServer((req, res) => {
  // Allow cross-origin requests from all origins
  cors()(req, res, () => {
    if (req.url === '/api/food' && req.method === 'GET') {
      res.writeHead(200, { 'Content-Type': 'application/json' });
      res.end(JSON.stringify(foodItems));
    } else {
      res.writeHead(404, { 'Content-Type': 'text/plain' });
      res.end('Not Found');
    }
  });
});

const PORT = 5000;
server.listen(PORT, () => {
  console.log(`Server running at http://localhost:${PORT}`);
});
------------------------------------------------------------

frontend
--------
app.js
------
import React, { useEffect, useState } from 'react';
import 'bootstrap/dist/css/bootstrap.min.css';
import "./app.css";

// Importing local images
import piz from "./pizz.png"
import bur from "./bur.png"
import pas from "./pas.png"


const App = () => {
  const [foodItems, setFoodItems] = useState([]);
  const [cart, setCart] = useState([]);
  const [isCheckout, setIsCheckout] = useState(false);

  useEffect(() => {
    // Instead of fetching from API, we directly set the local foodItems
    const localFoodItems = [
      { id: 1, name: 'Pizza', price: 10, image: piz },
      { id: 2, name: 'Burger', price: 5, image: bur },
      { id: 3, name: 'Pasta', price: 8, image: pas },
    ];
    setFoodItems(localFoodItems);
  }, []);

  const addToCart = (item) => {
    setCart([...cart, item]);
  };

  const handleCheckout = () => {
    setIsCheckout(true);
  };

  return (
    <div className="container mt-4">
      <h1 className="text-center mb-4">MOANO</h1>
      {!isCheckout ? (
        <div>
          <h2 className="mb-3" id= "menu">MENU</h2>
          <div className="row">
            {foodItems.map((item) => (
              <div className="col-md-4 mb-4" key={item.id}>
                <div className="card h-100">
                  <img
                    src={item.image}
                    className="card-img-top"
                    alt={item.name}
                  />
                  <div className="card-body text-center">
                    <h5 className="card-title">{item.name}</h5>
                    <p className="card-text">Price: ${item.price}</p>
                    <button
                      className="btn btn-primary"
                      onClick={() => addToCart(item)}
                    >
                      Add to Cart
                    </button>
                  </div>
                </div>
              </div>
            ))}
          </div>
          <h2 className="mt-4">Cart</h2>
          {cart.length > 0 ? (
            <ul className="list-group">
              {cart.map((item, index) => (
                <li className="list-group-item" key={index}>
                  {item.name} - ${item.price}
                </li>
              ))}
            </ul>
          ) : (
            <p className="text-muted">Your cart is empty</p>
          )}
          <button
            className="btn btn-success mt-3"
            onClick={handleCheckout}
            disabled={cart.length === 0}
          >
            Proceed to Checkout
          </button>
        </div>
      ) : (
        <div className="text-center">
          <h2>Checkout</h2>
          <p>Your total is: ${cart.reduce((acc, item) => acc + item.price, 0)}</p>
          <p className="text-success">Dummy Payment Page: Payment Successful!</p>
          <button
            className="btn btn-primary"
            onClick={() => window.location.reload()}
          >
            Order Again
          </button>
        </div>
      )}
    </div>
  );
};

export default App;
----------------------------------------------------------

styling
-------
app.css
-------
/* General Styles */
body {
    font-family: 'Arial', sans-serif;
    background-color: #f8f9fa;
    color: #333;
}

/* Header */
h1 {
    font-size: 2.5rem;
    font-weight: 600;
    color: #007bff;
}

h2 {
    font-size: 2rem;
    color: #343a40;
}

.card {
    border: none;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    overflow: hidden;
    transition: transform 0.3s ease, box-shadow 0.3s ease; /* Added transition */
}

.card:hover {
    transform: translateY(-10px); /* Slightly lift the card */
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2); /* Increase shadow on hover */
}

.card img {
    border-radius: 10px;
}

.card-body {
    background-color: #ffffff;
}

.card-title {
    font-size: 1.2rem;
    font-weight: 600;
    color: #343a40;
}

.card-text {
    font-size: 1rem;
    color: #28a745;
}

.btn {
    font-weight: 600;
}

.btn-primary {
    background-color: #007bff;
    border-color: #007bff;
}

.btn-primary:hover {
    background-color: #0056b3;
    border-color: #004085;
}

.btn-success {
    background-color: #28a745;
    border-color: #28a745;
}

.btn-success:hover {
    background-color: #218838;
    border-color: #1e7e34;
}

.btn:disabled {
    background-color: #cccccc;
    border-color: #cccccc;
}

/* Cart and Checkout Styles */
ul.list-group {
    list-style-type: none;
    padding: 0;
}

.list-group-item {
    font-size: 1.1rem;
    padding: 10px 15px;
}

.mt-4 {
    margin-top: 2rem !important;
}

.mt-3 {
    margin-top: 1rem !important;
}

.text-muted {
    color: #6c757d;
}

.text-success {
    color: #28a745;
}

/* Responsive Styles */
@media (max-width: 768px) {
    .card-body {
        padding: 15px;
    }

    h1 {
        font-size: 2rem;
    }

    h2 {
        font-size: 1.75rem;
    }

    .col-md-4 {
        max-width: 100%;
        margin-bottom: 15px;
    }
}
#menu{
    text-align: center;
}
